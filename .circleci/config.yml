version: 2.1
setup: true

orbs:
  go: circleci/go@1.6.0
  continuation: circleci/continuation@0.1.0

jobs:
  verify-ci-should-run:
    docker:
      - image: circleci/golang:latest
    steps:
      - run: echo 'Starting Circle CI pipeline'
      - checkout
      - run:
          name: Verify CI should run
          command: |
            RUN_PIPELINES=0

            # run CI when manually triggers via CircleCi Dashboard
            # [ <<pipeline.trigger_source>> ~= 'api' ] && SHOULD_RUN_PIPELINES=1 
            
            # only run CI when commit message includes 'run ci'
            LAST_LOG=$(git log -1 --grep="run ci" --pretty=%B)
            [ -z "$LAST_LOG" ] && RUN_PIPELINES=1
            
            echo "should run? $RUN_PIPELINES"
            if [ "$RUN_PIPELINES" -eq "0" ]; then
              echo "Don't run CI workflows"
              curl --request POST \
                --url https://${CIRCLE_TOKEN}@circleci.com/api/v2/workflow/$CIRCLE_WORKFLOW_ID/cancel
              sleep 30  # Give cancellation a chance to run. This script then won't continue running.
              exit 1  # If cancellation didn't run for some reason, fail the build.
            else 
              echo 'Run CI workflow'
            fi
  fluff:
    docker:
      - image: circleci/golang:latest
    steps:
      - run: echo 'Next Step'

      # - run:
      #   name: Dynamically generate the appropriate pipeline configuration
      #   command: |
      #     cd .circleci
      #     ls -la
      #     echo "Merge all YAML files into a dynamically generated pipeline.yml file"
      #     cat executors.yml commands.yml jobs.yml workflows.yml > pipeline.yml
      #     ls -a
      #     cat pipeline.yml
      # - continuation/continue:
      #   configuration_path: .circleci/pipeline.yml
      # - store_artifacts:
      #   path: .circleci/pipeline.yml
      #   destination yaml/pipeline.yml

workflows:
  # the always-run workflow is always triggered, regardless of the pipeline parameters.
  setup-workflow:
    jobs:
      - verify-ci-should-run:
          context: test-runner:poll-circle-workflow
      - fluff:
          requires:
            - verify-ci-should-run
    # jobs:
      # # the path-filtering/filter job determines which pipeline
      # # parameters to update.
      # - path-filtering/filter:
      #     name: check-updated-files
      #     mapping: |
      #       service1/.* run-build-service-1-job true
      #       service2/.* run-build-service-2-job true
      #     base-revision: main
      #     # this is the path of the configuration we should trigger once
      #     # path filtering and pipeline parameter value updates are
      #     # complete. In this case, we are using the parent dynamic
      #     # configuration itself.
      #     config-path: .circleci/continue_config.yml